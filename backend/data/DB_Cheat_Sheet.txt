# 401K Payment Management System: DATABASE SCHEMA

I'll present the complete database schema in the structured template format. This schema is designed to efficiently manage 401K payment tracking, client information, and payment compliance.

## TABLES

### 1. `clients`
Stores client organization information.

| Column Name | Data Type | Constraints | Description |
|-------------|-----------|------------|-------------|
| `client_id` | INTEGER | PRIMARY KEY, AUTOINCREMENT | Unique identifier for each client |
| `display_name` | TEXT | NOT NULL | Short name for UI display |
| `full_name` | TEXT | | Complete legal name of the client |
| `ima_signed_date` | TEXT | | Investment Management Agreement signing date |
| `onedrive_folder_path` | TEXT | | Path to client's folder in OneDrive |
| `valid_from` | DATETIME | DEFAULT CURRENT_TIMESTAMP | Record creation timestamp |
| `valid_to` | DATETIME | | Soft delete timestamp (NULL for active records) |

### 2. `contracts`
Stores fee agreements between clients and providers.

| Column Name | Data Type | Constraints | Description |
|-------------|-----------|------------|-------------|
| `contract_id` | INTEGER | PRIMARY KEY, AUTOINCREMENT | Unique identifier for each contract |
| `client_id` | INTEGER | NOT NULL, FOREIGN KEY | Reference to client |
| `contract_number` | TEXT | | Provider's reference number |
| `provider_name` | TEXT | | Name of provider sending payments |
| `contract_start_date` | TEXT | | Date contract became effective |
| `fee_type` | TEXT | | "percentage" or "flat" - determines calculation method |
| `percent_rate` | REAL | | Used when fee_type is "percentage" |
| `flat_rate` | REAL | | Used when fee_type is "flat" |
| `payment_schedule` | TEXT | | "monthly" or "quarterly" - affects arrears calculation |
| `num_people` | INTEGER | | Number of employees covered |
| `valid_from` | DATETIME | DEFAULT CURRENT_TIMESTAMP | Record creation timestamp |
| `valid_to` | DATETIME | | Soft delete timestamp (NULL for active records) |
| `is_active` | INTEGER | NOT NULL DEFAULT 1, CHECK (is_active IN (0,1)) | Flag for active contracts (1=active, 0=inactive) |

**Foreign Keys:**
- `client_id` references `clients(client_id)` ON DELETE CASCADE

### 3. `contacts`
Stores contact information for client organizations.

| Column Name | Data Type | Constraints | Description |
|-------------|-----------|------------|-------------|
| `contact_id` | INTEGER | PRIMARY KEY, AUTOINCREMENT | Unique identifier for each contact |
| `client_id` | INTEGER | NOT NULL, FOREIGN KEY | Reference to client |
| `contact_type` | TEXT | NOT NULL | Type of contact (e.g., "primary", "billing") |
| `contact_name` | TEXT | | Contact person's name |
| `phone` | TEXT | | Contact phone number |
| `email` | TEXT | | Contact email address |
| `fax` | TEXT | | Contact fax number |
| `physical_address` | TEXT | | Street address |
| `mailing_address` | TEXT | | Mailing address if different from physical |
| `valid_from` | DATETIME | DEFAULT CURRENT_TIMESTAMP | Record creation timestamp |
| `valid_to` | DATETIME | | Soft delete timestamp (NULL for active records) |

**Foreign Keys:**
- `client_id` references `clients(client_id)` ON DELETE CASCADE

### 4. `payments`
Records individual payment transactions.

| Column Name | Data Type | Constraints | Description |
|-------------|-----------|------------|-------------|
| `payment_id` | INTEGER | PRIMARY KEY, AUTOINCREMENT | Unique identifier for each payment |
| `contract_id` | INTEGER | NOT NULL, FOREIGN KEY | Reference to contract |
| `client_id` | INTEGER | NOT NULL, FOREIGN KEY | Reference to client |
| `received_date` | TEXT | | When payment was physically received |
| `total_assets` | INTEGER | | Assets Under Management (often missing for flat-fee clients) |
| `actual_fee` | REAL | | Actual amount received |
| `method` | TEXT | | Payment method (e.g., "check", "ACH") |
| `notes` | TEXT | | Optional payment notes |
| `valid_from` | DATETIME | DEFAULT CURRENT_TIMESTAMP | Record creation timestamp |
| `valid_to` | DATETIME | | Soft delete timestamp (NULL for active records) |
| `applied_start_month` | INTEGER | | Start month (1-12) for monthly schedule clients |
| `applied_start_month_year` | INTEGER | | Year of start month |
| `applied_end_month` | INTEGER | | End month (same as start for single payments) |
| `applied_end_month_year` | INTEGER | | Year of end month |
| `applied_start_quarter` | INTEGER | | Start quarter (1-4) for quarterly schedule clients |
| `applied_start_quarter_year` | INTEGER | | Year of start quarter |
| `applied_end_quarter` | INTEGER | | End quarter (same as start for single payments) |
| `applied_end_quarter_year` | INTEGER | | Year of end quarter |

**Foreign Keys:**
- `client_id` references `clients(client_id)` ON DELETE CASCADE
- `contract_id` references `contracts(contract_id)` ON DELETE CASCADE

### 5. `client_files`
Tracks uploaded client documents.

| Column Name | Data Type | Constraints | Description |
|-------------|-----------|------------|-------------|
| `file_id` | INTEGER | PRIMARY KEY, AUTOINCREMENT | Unique identifier for each file |
| `client_id` | INTEGER | NOT NULL, FOREIGN KEY | Reference to client |
| `file_name` | TEXT | NOT NULL | Original filename |
| `onedrive_path` | TEXT | NOT NULL | Relative path from client folder |
| `uploaded_at` | DATETIME | DEFAULT CURRENT_TIMESTAMP | Upload timestamp |

**Foreign Keys:**
- `client_id` references `clients(client_id)` ON DELETE CASCADE

### 6. `payment_files`
Links payments to supporting documents.

| Column Name | Data Type | Constraints | Description |
|-------------|-----------|------------|-------------|
| `payment_id` | INTEGER | NOT NULL, PRIMARY KEY (composite) | Reference to payment |
| `file_id` | INTEGER | NOT NULL, PRIMARY KEY (composite) | Reference to file |
| `linked_at` | DATETIME | DEFAULT CURRENT_TIMESTAMP | Timestamp when link was created |

**Primary Key:**
- Composite primary key (`payment_id`, `file_id`)

**Foreign Keys:**
- `payment_id` references `payments(payment_id)` ON DELETE CASCADE
- `file_id` references `client_files(file_id)` ON DELETE CASCADE

## INDEXES

### 1. `idx_payment_files_payment_id`
**Table:** `payment_files`  
**Columns:** `payment_id`  
**Type:** Single-column index  
**Purpose:** Speeds up payment-file lookups when searching for documents associated with a specific payment.

```sql
CREATE INDEX idx_payment_files_payment_id ON payment_files(payment_id);
```

### 2. `idx_payments_client_date`
**Table:** `payments`  
**Columns:** `client_id`, `received_date`  
**Type:** Composite index  
**Purpose:** Optimizes payment history queries by client, particularly when filtering by date range or finding the most recent payment for a client.

```sql
CREATE INDEX idx_payments_client_date ON payments(client_id, received_date);
```

### 3. `idx_payments_received_date`
**Table:** `payments`  
**Columns:** `received_date`  
**Type:** Single-column index  
**Purpose:** Improves performance for date-based filtering of payments, such as reporting on payments received within a specific timeframe.

```sql
CREATE INDEX idx_payments_received_date ON payments(received_date);
```

### 4. `idx_payments_valid_to`
**Table:** `payments`  
**Columns:** `valid_to`  
**Type:** Single-column index  
**Purpose:** Speeds up queries that filter for active payments (where `valid_to` is NULL), improving performance for most payment-related queries.

```sql
CREATE INDEX idx_payments_valid_to ON payments(valid_to);
```

## SOFT DELETE IMPLEMENTATION

This database uses a soft delete pattern via the `valid_to` field, which:
- Is NULL for active records
- Contains a timestamp when a record is "deleted"
- Allows for data recovery and historical auditing
- Is used across tables (clients, contracts, contacts, payments)

Most views automatically filter to only include records where `valid_to IS NULL` to focus on active data.

## VIEWS

### 1. `vw_core_period_utils`
Centralized period calculations and date formatting utility.

| Field Name | Data Type | Description |
|------------|-----------|-------------|
| `month_num` | INTEGER | Month number (1-12) |
| `month_name` | TEXT | Three-letter month abbreviation (Jan, Feb, etc.) |
| `quarter_num` | INTEGER | Quarter number (1-4) based on month |
| `quarter_name` | TEXT | Quarter label (Q1, Q2, etc.) |
| `arrears_month` | INTEGER | Current month minus 1 (for monthly arrears) |
| `arrears_month_year` | INTEGER | Year of arrears month |
| `arrears_quarter` | INTEGER | Current quarter minus 1 (for quarterly arrears) |
| `arrears_quarter_year` | INTEGER | Year of arrears quarter |
| `arrears_month_int` | INTEGER | Absolute month integer (year * 12 + month) for comparisons |
| `arrears_quarter_int` | INTEGER | Absolute quarter integer (year * 4 + quarter) for comparisons |
| `arrears_month_display` | TEXT | Formatted arrears month (e.g., "Jan 2025") |
| `arrears_quarter_display` | TEXT | Formatted arrears quarter (e.g., "Q1 2025") |
| `current_month` | INTEGER | Current calendar month (1-12) |
| `current_year` | INTEGER | Current calendar year |
| `current_quarter` | INTEGER | Current calendar quarter (1-4) |
| `current_month_int` | INTEGER | Absolute month integer for current month |
| `current_quarter_int` | INTEGER | Absolute quarter integer for current quarter |
| `current_month_display` | TEXT | Formatted current month (e.g., "Mar 2025") |
| `current_quarter_display` | TEXT | Formatted current quarter (e.g., "Q1 2025") |
| `calculation_date` | TEXT | Date when calculations were performed |

### 2. `vw_core_payment_base`
Foundation view containing all essential payment data with basic calculations.

| Field Name | Data Type | Description |
|------------|-----------|-------------|
| `payment_id` | INTEGER | Primary payment identifier |
| `client_id` | INTEGER | Client identifier |
| `client_name` | TEXT | Client display name |
| `contract_id` | INTEGER | Contract identifier |
| `provider_name` | TEXT | Name of service provider |
| `num_people` | INTEGER | Number of participants in plan |
| `received_date` | TEXT | Date payment was received |
| `method` | TEXT | Payment method (check, ACH, etc.) |
| `notes` | TEXT | Payment notes |
| `total_assets` | INTEGER | Assets Under Management amount |
| `actual_fee` | REAL | Actual fee amount received |
| `applied_start_month` | INTEGER | Start month (1-12) for monthly payments |
| `applied_start_month_year` | INTEGER | Year of start month |
| `applied_end_month` | INTEGER | End month for split payments |
| `applied_end_month_year` | INTEGER | Year of end month |
| `applied_start_quarter` | INTEGER | Start quarter (1-4) for quarterly payments |
| `applied_start_quarter_year` | INTEGER | Year of start quarter |
| `applied_end_quarter` | INTEGER | End quarter for split payments |
| `applied_end_quarter_year` | INTEGER | Year of end quarter |
| `fee_type` | TEXT | Fee type ("percentage" or "flat") |
| `payment_schedule` | TEXT | Payment schedule ("monthly" or "quarterly") |
| `percent_rate` | REAL | Percentage rate (when fee_type is "percentage") |
| `flat_rate` | REAL | Flat fee amount (when fee_type is "flat") |
| `start_month_int` | INTEGER | Absolute month integer for start month |
| `end_month_int` | INTEGER | Absolute month integer for end month |
| `start_quarter_int` | INTEGER | Absolute quarter integer for start quarter |
| `end_quarter_int` | INTEGER | Absolute quarter integer for end quarter |
| `periods_covered` | INTEGER | Number of periods covered by payment |
| `is_split_payment` | INTEGER | Boolean flag (1=split payment, 0=single period) |
| `expected_fee` | REAL | Calculated expected fee amount |
| `start_period_display` | TEXT | Formatted start period (e.g., "Jan 2025" or "Q1 2025") |
| `end_period_display` | TEXT | Formatted end period for split payments |
| `periods_covered_display` | TEXT | Formatted range of periods covered (e.g., "Jan 2025 - Mar 2025") |
| `has_attachment` | INTEGER | Boolean flag (1=has document, 0=no document) |

### 3. `vw_core_payment_latest`
View showing only the most recent payment for each client-contract combination.

| Field Name | Data Type | Description |
|------------|-----------|-------------|
| `payment_id` | INTEGER | Primary payment identifier |
| `client_id` | INTEGER | Client identifier |
| `client_name` | TEXT | Client display name |
| `contract_id` | INTEGER | Contract identifier |
| `provider_name` | TEXT | Name of service provider |
| `num_people` | INTEGER | Number of participants in plan |
| `received_date` | TEXT | Date payment was received |
| `method` | TEXT | Payment method (check, ACH, etc.) |
| `notes` | TEXT | Payment notes |
| `total_assets` | INTEGER | Assets Under Management amount |
| `actual_fee` | REAL | Actual fee amount received |
| `applied_start_month` | INTEGER | Start month (1-12) for monthly payments |
| `applied_start_month_year` | INTEGER | Year of start month |
| `applied_end_month` | INTEGER | End month for split payments |
| `applied_end_month_year` | INTEGER | Year of end month |
| `applied_start_quarter` | INTEGER | Start quarter (1-4) for quarterly payments |
| `applied_start_quarter_year` | INTEGER | Year of start quarter |
| `applied_end_quarter` | INTEGER | End quarter for split payments |
| `applied_end_quarter_year` | INTEGER | Year of end quarter |
| `fee_type` | TEXT | Fee type ("percentage" or "flat") |
| `payment_schedule` | TEXT | Payment schedule ("monthly" or "quarterly") |
| `percent_rate` | REAL | Percentage rate (when fee_type is "percentage") |
| `flat_rate` | REAL | Flat fee amount (when fee_type is "flat") |
| `start_month_int` | INTEGER | Absolute month integer for start month |
| `end_month_int` | INTEGER | Absolute month integer for end month |
| `start_quarter_int` | INTEGER | Absolute quarter integer for start quarter |
| `end_quarter_int` | INTEGER | Absolute quarter integer for end quarter |
| `periods_covered` | INTEGER | Number of periods covered by payment |
| `is_split_payment` | INTEGER | Boolean flag (1=split payment, 0=single period) |
| `expected_fee` | REAL | Calculated expected fee amount |
| `start_period_display` | TEXT | Formatted start period (e.g., "Jan 2025" or "Q1 2025") |
| `end_period_display` | TEXT | Formatted end period for split payments |
| `periods_covered_display` | TEXT | Formatted range of periods covered |
| `has_attachment` | INTEGER | Boolean flag (1=has document, 0=no document) |


### 4. `vw_core_payment_variance`
Calculates payment variance (difference between expected and actual fees).

| Field Name | Data Type | Description |
|------------|-----------|-------------|
| `payment_id` | INTEGER | Payment identifier |
| `client_id` | INTEGER | Client identifier |
| `contract_id` | INTEGER | Contract identifier |
| `actual_fee` | REAL | Actual fee amount received |
| `expected_fee` | REAL | Calculated expected fee |
| `variance_amount` | REAL | Difference between actual and expected fee |
| `variance_percentage` | REAL | Variance as percentage of expected fee |
| `variance_status` | TEXT | Status label ("Within Target", "Overpaid", "Underpaid") |
| `variance_color` | TEXT | Color code for UI display (green, blue, red, gray) |

### 5. `vw_ui_client_compliance`
Client compliance view for monitoring payment status by schedule.

| Field Name | Data Type | Description |
|------------|-----------|-------------|
| `client_id` | INTEGER | Client identifier |
| `display_name` | TEXT | Client name for display |
| `contract_id` | INTEGER | Contract identifier |
| `provider_name` | TEXT | Name of service provider |
| `payment_schedule` | TEXT | Raw schedule value ("monthly" or "quarterly") |
| `schedule_display` | TEXT | Formatted schedule display ("Monthly" or "Quarterly") |
| `current_period_display` | TEXT | Formatted current period (e.g., "Jan 2025" or "Q1 2025") |
| `is_paid_current_period` | INTEGER | Boolean flag (1=paid, 0=due) |
| `payment_status` | TEXT | Status label ("Paid" or "Due") |
| `status_color` | TEXT | Color code for UI display (green=paid, yellow=due) |
| `last_payment_id` | INTEGER | Most recent payment identifier |
| `last_payment_date` | TEXT | Date of most recent payment |
| `last_payment_date_display` | TEXT | Formatted payment date (MM/DD/YYYY) |
| `last_period_display` | TEXT | Period covered by most recent payment |
| `missing_periods_count` | INTEGER | Count of periods with no payment |
| `recent_missing_period` | TEXT | Most recent period with no payment |

### 6. `vw_ui_client_dashboard`
Comprehensive client dashboard view with payment and variance information.

| Field Name | Data Type | Description |
|------------|-----------|-------------|
| `client_id` | INTEGER | Client identifier |
| `display_name` | TEXT | Client name for display |
| `contract_id` | INTEGER | Contract identifier |
| `provider_name` | TEXT | Name of service provider |
| `payment_schedule` | TEXT | Raw schedule value |
| `fee_type` | TEXT | Fee type ("percentage" or "flat") |
| `num_people` | INTEGER | Number of participants |
| `percent_rate` | REAL | Percentage rate (when applicable) |
| `flat_rate` | REAL | Flat fee amount (when applicable) |
| `rate_display` | TEXT | Formatted rate with symbols (e.g., "0.50%" or "$500.00") |
| `last_payment_id` | INTEGER | Most recent payment identifier |
| `last_payment_date` | TEXT | Date of most recent payment |
| `last_payment_date_display` | TEXT | Formatted payment date (MM/DD/YYYY) |
| `last_payment_amount` | REAL | Amount of most recent payment |
| `last_payment_expected` | REAL | Expected amount for most recent payment |
| `last_payment_aum` | INTEGER | Assets under management for last payment |
| `last_period_display` | TEXT | Period covered by most recent payment |
| `periods_covered_display` | TEXT | Formatted periods covered |
| `is_split_payment` | INTEGER | Boolean flag for split payments |
| `has_attachment` | INTEGER | Boolean flag for document attachment |
| `last_variance_amount` | REAL | Difference between actual and expected fee |
| `last_variance_percentage` | REAL | Variance as percentage of expected fee |
| `last_variance_status` | TEXT | Status label for variance |
| `last_variance_color` | TEXT | Color code for variance display |
| `last_variance_amount_display` | TEXT | Formatted variance amount |
| `last_variance_percentage_display` | TEXT | Formatted variance percentage |
| `current_period_display` | TEXT | Current period being tracked |
| `is_paid_current_period` | INTEGER | Boolean flag for current period payment |
| `payment_status` | TEXT | Status label for payment ("Paid" or "Due") |
| `compliance_color` | TEXT | Color code for compliance display |
| `missing_periods_count` | INTEGER | Count of periods with no payment |

### 7. `vw_ui_client_details`
Detailed client information for profile displays.

| Field Name | Data Type | Description |
|------------|-----------|-------------|
| `client_id` | INTEGER | Client identifier |
| `name` | TEXT | Client display name |
| `legal_name` | TEXT | Full legal name |
| `ima_signed_date` | TEXT | Investment Management Agreement signing date |
| `contract_id` | INTEGER | Contract identifier |
| `provider` | TEXT | Service provider name |
| `contract_number` | TEXT | Provider's reference number |
| `contract_start_date` | TEXT | Date contract became effective |
| `number_of_participants` | INTEGER | Number of employees covered |
| `fee_type` | TEXT | Fee type ("percentage" or "flat") |
| `payment_schedule` | TEXT | Payment schedule |
| `percent_rate` | REAL | Percentage rate (when applicable) |
| `flat_rate` | REAL | Flat fee amount (when applicable) |
| `rate_display` | TEXT | Formatted rate with symbols |
| `schedule_display` | TEXT | Formatted schedule display |
| `annual_rate` | REAL | Calculated annual rate |
| `annual_rate_display` | TEXT | Formatted annual rate |
| `since_date` | TEXT | Date of first payment |
| `primary_contact` | TEXT | Primary contact name |
| `primary_email` | TEXT | Primary contact email |
| `primary_phone` | TEXT | Primary contact phone |

### 8. `vw_ui_client_selector`
Simplified client list for selection dropdowns and navigation.

| Field Name | Data Type | Description |
|------------|-----------|-------------|
| `client_id` | INTEGER | Client identifier |
| `display_name` | TEXT | Client name for display |
| `contract_count` | INTEGER | Number of active contracts |
| `last_payment_date` | TEXT | Date of most recent payment |
| `overdue_count` | INTEGER | Number of overdue payments |
| `status_color` | TEXT | Color code for status (yellow=overdue, green=current) |
| `initial` | TEXT | First letter of client name (for UI grouping) |

### 9. `vw_ui_current_period`
Calculates the current period for each client based on payment schedule.

| Field Name | Data Type | Description |
|------------|-----------|-------------|
| `client_id` | INTEGER | Client identifier |
| `display_name` | TEXT | Client name for display |
| `contract_id` | INTEGER | Contract identifier |
| `provider_name` | TEXT | Name of service provider |
| `payment_schedule` | TEXT | Payment schedule type |
| `current_month` | INTEGER | Current month number (1-12) for monthly clients |
| `current_month_year` | INTEGER | Year of current month |
| `current_quarter` | INTEGER | Current quarter number (1-4) for quarterly clients |
| `current_quarter_year` | INTEGER | Year of current quarter |
| `current_month_int` | INTEGER | Absolute month integer for comparisons |
| `current_quarter_int` | INTEGER | Absolute quarter integer for comparisons |
| `current_period_display` | TEXT | Formatted current period display |
| `is_paid_current_period` | INTEGER | Boolean flag indicating payment status |

### 10. `vw_ui_document_list`
List of all client documents with metadata.

| Field Name | Data Type | Description |
|------------|-----------|-------------|
| `file_id` | INTEGER | File identifier |
| `client_id` | INTEGER | Client identifier |
| `client_name` | TEXT | Client name for display |
| `file_name` | TEXT | Original filename |
| `onedrive_path` | TEXT | Path to file in OneDrive |
| `uploaded_at` | DATETIME | Upload timestamp |
| `uploaded_date_display` | TEXT | Formatted upload date (MM/DD/YYYY) |
| `file_extension` | TEXT | File extension (lowercase) |
| `payment_count` | INTEGER | Number of payments linked to this file |
| `has_active_payment` | INTEGER | Boolean flag for active payment links |

### 11. `vw_ui_missing_periods`
Identifies payment periods that have no corresponding payment records.

| Field Name | Data Type | Description |
|------------|-----------|-------------|
| `client_id` | INTEGER | Client identifier |
| `contract_id` | INTEGER | Contract identifier |
| `period_type` | TEXT | Period type ("monthly" or "quarterly") |
| `period_num` | INTEGER | Period number (1-12 for months, 1-4 for quarters) |
| `period_year` | INTEGER | Year of the period |
| `period_int` | INTEGER | Absolute period integer for comparisons |
| `period_display` | TEXT | Formatted period display (e.g., "Jan 2025" or "Q1 2025") |

### 12. `vw_ui_payment_documents`
Links payments to their supporting documents.

| Field Name | Data Type | Description |
|------------|-----------|-------------|
| `payment_id` | INTEGER | Payment identifier |
| `client_id` | INTEGER | Client identifier |
| `client_name` | TEXT | Client name for display |
| `contract_id` | INTEGER | Contract identifier |
| `provider_name` | TEXT | Name of service provider |
| `received_date` | TEXT | Date payment was received |
| `file_id` | INTEGER | File identifier |
| `file_name` | TEXT | Original filename |
| `onedrive_path` | TEXT | Path to file in OneDrive |
| `uploaded_at` | DATETIME | Upload timestamp |
| `file_extension` | TEXT | File extension (lowercase) |
| `payment_date_display` | TEXT | Formatted payment date (MM/DD/YYYY) |
| `uploaded_date_display` | TEXT | Formatted upload date (MM/DD/YYYY) |

### 13. `vw_ui_payment_form_defaults`
Provides default values for payment entry forms.

| Field Name | Data Type | Description |
|------------|-----------|-------------|
| `client_id` | INTEGER | Client identifier |
| `client_name` | TEXT | Client name for display |
| `contract_id` | INTEGER | Contract identifier |
| `provider_name` | TEXT | Name of service provider |
| `fee_type` | TEXT | Fee type ("percentage" or "flat") |
| `payment_schedule` | TEXT | Payment schedule type |
| `default_month` | INTEGER | Default month for new payments |
| `default_month_year` | INTEGER | Year of default month |
| `default_quarter` | INTEGER | Default quarter for new payments |
| `default_quarter_year` | INTEGER | Year of default quarter |
| `expected_fee` | REAL | Calculated expected fee amount |
| `last_assets` | INTEGER | Most recent AUM amount |
| `last_aum_date` | TEXT | Date of most recent AUM data |
| `default_period_display` | TEXT | Formatted default period display |

### 14. `vw_ui_payment_history`
Complete payment history with formatting for UI display.

| Field Name | Data Type | Description |
|------------|-----------|-------------|
| `payment_id` | INTEGER | Payment identifier |
| `client_id` | INTEGER | Client identifier |
| `client_name` | TEXT | Client name for display |
| `contract_id` | INTEGER | Contract identifier |
| `provider_name` | TEXT | Name of service provider |
| `received_date` | TEXT | Date payment was received |
| `method` | TEXT | Payment method (check, ACH, etc.) |
| `notes` | TEXT | Payment notes |
| `total_assets` | INTEGER | Assets Under Management amount |
| `actual_fee` | REAL | Actual fee amount received |
| `expected_fee` | REAL | Calculated expected fee |
| `periods_covered` | INTEGER | Number of periods covered |
| `periods_covered_display` | TEXT | Formatted periods covered display |
| `is_split_payment` | INTEGER | Boolean flag for split payments |
| `has_attachment` | INTEGER | Boolean flag for document attachment |
| `variance_amount` | REAL | Difference between actual and expected fee |
| `variance_percentage` | REAL | Variance as percentage of expected fee |
| `variance_status` | TEXT | Status label for variance |
| `variance_color` | TEXT | Color code for variance display |
| `actual_fee_display` | TEXT | Formatted actual fee amount |
| `expected_fee_display` | TEXT | Formatted expected fee amount |
| `variance_amount_display` | TEXT | Formatted variance amount |
| `variance_percentage_display` | TEXT | Formatted variance percentage |
| `total_assets_display` | TEXT | Formatted AUM amount |
| `received_date_display` | TEXT | Formatted received date (MM/DD/YYYY) |
| `document_count` | INTEGER | Number of attached documents |

### 15. `vw_ui_provider_selector`
List of providers with associated client and payment information.

| Field Name | Data Type | Description |
|------------|-----------|-------------|
| `provider_name` | TEXT | Service provider name |
| `client_count` | INTEGER | Number of clients with this provider |
| `contract_count` | INTEGER | Number of active contracts |
| `last_payment_date` | TEXT | Date of most recent payment |
| `overdue_count` | INTEGER | Number of overdue payments |
| `status_color` | TEXT | Color code for status (yellow=overdue, green=current) |

## KEY DESIGN FEATURES

1. **Efficient Period Tracking**: The system elegantly handles both monthly and quarterly payment schedules through specialized date fields and calculations.

2. **Split Payment Support**: The schema accommodates payments covering multiple periods through start/end date pairs and intelligent period calculations.

3. **Fee Calculation Logic**: Built-in formulas calculate expected fees based on either percentage-of-assets or flat-fee models.

4. **Variance Analysis**: Automated comparison between expected and actual fees with tolerance bands for classifying discrepancies.

5. **Document Management**: Comprehensive tracking of supporting files with many-to-many relationship between payments and documents.

6. **Soft Delete**: Implements non-destructive record deletion through timestamp fields rather than permanent removal.

7. **UI-Optimized Views**: Dedicated views for different interface components with pre-calculated fields and formatted display values.

This database design provides a robust foundation for managing 401K payment tracking, including comprehensive audit capabilities, performance optimization through strategic indexing, and business intelligence through sophisticated view calculations.